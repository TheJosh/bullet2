

INCLUDE_DIRECTORIES(
${BULLET_PHYSICS_SOURCE_DIR}/src 
${BULLET_PHYSICS_SOURCE_DIR}/Demos/OpenGL
${BULLET_PHYSICS_SOURCE_DIR}/Demos/BasicDemoOpenCL/Shared
)

IF (INTERNAL_CREATE_DISTRIBUTABLE_MSVC_PROJECTFILES)
	INCLUDE_DIRECTORIES(		$ENV{==AMDAPPSDKROOT=}/include )
	IF (CMAKE_CL_64)
		SET(CMAK_AMDAPPSDKROOT_LIBPATH 		$ENV{==AMDAPPSDKROOT=}/lib/x86_64		)
	ELSE(CMAKE_CL_64)
		SET(CMAK_AMDAPPSDKROOT_LIBPATH		$ENV{==AMDAPPSDKROOT=}/lib/x86		)
	ENDIF(CMAKE_CL_64)
ELSE()
	INCLUDE_DIRECTORIES(		$ENV{AMDAPPSDKROOT}/include	)
	IF (CMAKE_CL_64)
		SET(CMAK_AMDAPPSDKROOT_LIBPATH 		$ENV{AMDAPPSDKROOT}/lib/x86_64 )
	ELSE(CMAKE_CL_64)
		SET(CMAK_AMDAPPSDKROOT_LIBPATH		$ENV{AMDAPPSDKROOT}/lib/x86		)
	ENDIF(CMAKE_CL_64)
ENDIF()


IF (USE_GLUT)
	LINK_LIBRARIES(
		OpenGLSupport 
		BulletDynamics  
		BulletCollision 
		BulletMultiThreaded 
		LinearMath 
		3dGridBroadphaseOCL_AMD 
		BatchConstraintSolverOCL_AMD  
		${GLUT_glut_LIBRARY} 
		${OPENGL_gl_LIBRARY} 
		${OPENGL_glu_LIBRARY}
		${CMAK_AMDAPPSDKROOT_LIBPATH}/OpenCL.lib
	)


	ADD_EXECUTABLE(AppBasicDemoOpenCL_AMD
		${BULLET_PHYSICS_SOURCE_DIR}/Demos/BasicDemoOpenCL/Shared/BasicDemoOpenCL.cpp
		${BULLET_PHYSICS_SOURCE_DIR}/Demos/BasicDemoOpenCL/Shared/main.cpp
		${BULLET_PHYSICS_SOURCE_DIR}/Demos/BasicDemoOpenCL/Shared/BasicDemoOpenCL.h
	)
	
	IF (NOT INTERNAL_CREATE_MSVC_RELATIVE_PATH_PROJECTFILES)
			IF (CMAKE_CL_64)
				ADD_CUSTOM_COMMAND(
					TARGET AppBasicDemoOpenCL_AMD
					POST_BUILD
					COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different ${BULLET_PHYSICS_SOURCE_DIR}/glut64.dll ${CMAKE_CURRENT_BINARY_DIR}
				)
			ELSE(CMAKE_CL_64)
				ADD_CUSTOM_COMMAND(
					TARGET AppBasicDemoOpenCL_AMD
					POST_BUILD
					COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different ${BULLET_PHYSICS_SOURCE_DIR}/GLUT32.DLL ${CMAKE_CURRENT_BINARY_DIR}
				)
			ENDIF(CMAKE_CL_64)
		ENDIF (NOT INTERNAL_CREATE_MSVC_RELATIVE_PATH_PROJECTFILES)
ELSE (USE_GLUT)
ENDIF (USE_GLUT)

IF (UNIX)
  TARGET_LINK_LIBRARIES(AppBasicDemoOpenCL_AMD pthread)
ENDIF(UNIX)

