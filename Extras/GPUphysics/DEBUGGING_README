
I have added some command line options to hopefully
help with our debugging problems.

1) Run without any shaders at all:

    GPU_physics_demo -s

   This should produce a grey screen with a neat grid of randomly
   coloured cubes that are sitting completely motionless.  If this
   doesn't work then render-to-texture and shaders are not the
   problem and we have some very basic OpenGL problem to worry
   about.

2) Run with just one shader - but no render-to-texture:

    GPU_physics_demo -p

   Just like '-s', this should produce a grey screen with a neat
   grid of randomly coloured cubes that are sitting completely
   motionless.  This time, the vertex shader is reading the
   positioning information from a texturemap.  If this
   doesn't work then render-to-texture isn't the problem but
   something is amiss in shader-land.

   There are several possibilities - the nastiest of which might
   be that your graphics card/driver doesn't support floating point
   textures.  (This is pretty much 'Game Over' for you because
   without that, doing physics in the GPU is going to be
   virtually impossible).

3) Run without vertex texturing:

    GPU_physics_demo -v

   On hardware that doesn't support vertex texturing, this flag
   is turned on by default (and things run about 5x slower!)  

   Use this flag to force the software to run without vertex
   texturing on hardware that does actually support it.

   You can use this flag in conjunction with any of the others.

